coord_cartesian(ylim = c(0, 100))+
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE)
percent_iso_kept_as_frac_summary
# Make some summary plots
percent_iso_kept_as_frac_summary <- ggplot(data = big_summarized_data, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept,
color = filter_type, shape = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 100))+
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE)
percent_iso_kept_as_frac_summary
# Make some summary plots
percent_iso_kept_as_frac_summary <- ggplot(data = big_summarized_data, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept,
color = filter_type, shape = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 100))+
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE) +
geom_smooth(data = big_summarized_data,
mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept, color = filter_type),
method = 'gam', se = FALSE, size = 0.5, linetype = 'dashed')
percent_iso_kept_as_frac_summary
# Make some summary plots
percent_iso_kept_as_frac_summary <- ggplot(data = big_summarized_data, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept,
color = filter_type, shape = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE)
percent_iso_kept_as_frac_summary
# Make some summary plots
percent_iso_kept_as_frac_summary <- ggplot(data = big_summarized_data, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point() +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE)
percent_iso_kept_as_frac_summary
# Make some summary plots
percent_iso_kept_as_frac_summary <- ggplot(data = big_summarized_data, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE)
percent_iso_kept_as_frac_summary
# Make some summary plots
percent_iso_kept_as_frac_summary <- ggplot(data = big_summarized_data, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE, size = 1.3)
percent_iso_kept_as_frac_summary
# Make some summary plots
percent_iso_kept_as_frac_summary <- ggplot(data = big_summarized_data, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE, size = 1.2)
percent_iso_kept_as_frac_summary
# Make some summary plots
percent_iso_kept_as_frac_summary <- ggplot(data = big_summarized_data, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE, size = 1)
percent_iso_kept_as_frac_summary
# Make some summary plots
percent_iso_kept_as_frac_summary <- ggplot(data = big_summarized_data, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE, size = 1.1)
percent_iso_kept_as_frac_summary
# Make some summary plots
percent_iso_kept_as_frac_summary <- ggplot(data = big_summarized_data, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE, size = 1.1) +
scale_color_manual(values = c('check_all_groups' = 'red', 'no_groups' = 'blue', 'only_looking_at_smallest_group' = 'yellow'))
percent_iso_kept_as_frac_summary
# Make some summary plots
percent_iso_kept_as_frac_summary <- ggplot(data = big_summarized_data, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE, size = 1.1) +
scale_color_manual(values = c('check_all_groups' = '#eb4034', 'no_groups' = '#3483eb', 'only_looking_at_smallest_group' = '#db8e2a'))
percent_iso_kept_as_frac_summary
percent_gene_kept_as_frac_summary <- ggplot(data = big_summarized_data, mapping = aes(x = Fraction_of_smallest_group, y = Percent_genes_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE, size = 1.1) +
scale_color_manual(values = c('check_all_groups' = '#eb4034', 'no_groups' = '#3483eb', 'only_looking_at_smallest_group' = '#db8e2a'))
percent_gene_kept_as_frac_summary
saveplot('Summary_PercentIsoforms_along_Fraction', percent_iso_kept_as_frac_summary, 12)
saveplot('Summary_PercentGenes_along_Fraction', percent_gene_kept_as_frac_summary, 8)
saveplot('Summary_PercentGenes_along_Fraction', percent_gene_kept_as_frac_summary, 12)
big_summarized_data[which(big_summarized_data$Fraction_of_smallest_group == 0.1), ]
big_summarized_data[which(big_summarized_data$Fraction_of_smallest_group == 0.05), ]
big_summarized_data[which(big_summarized_data$Fraction_of_smallest_group == 0.05 & big_summarized_data$filter_type == 'check_all_groups'), ]
big_summarized_data[which(big_summarized_data$Fraction_of_smallest_group %in% c(0.05, 0.07, 0.1) & big_summarized_data$filter_type == 'check_all_groups'), ]
percent_iso_kept_cellNum <- ggplot(data = big_summarized_data, mapping = aes(x = Cell_number_requirement, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE, size = 1.1) +
scale_color_manual(values = c('check_all_groups' = '#eb4034', 'no_groups' = '#3483eb', 'only_looking_at_smallest_group' = '#db8e2a'))
percent_iso_kept_cellNum
saveplot('Summary_PercentIsoforms_along_CellNum', percent_iso_kept_cellNum, 12)
saveplot('Summary_PercentGenes_along_CellNum', percent_gene_kept_cellNum, 12)
percent_gene_kept_cellNum <- ggplot(data = big_summarized_data, mapping = aes(x = Cell_number_requirement, y = Percent_genes_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs,\nsummarized between all methods')) +
scale_color_manual(values = c('check_all_groups' = '#eb4034', 'no_groups' = '#3483eb', 'only_looking_at_smallest_group' = '#db8e2a'))
saveplot('Summary_PercentGenes_along_CellNum', percent_gene_kept_cellNum, 12)
percent_iso_kept_cellNum <- ggplot(data = big_summarized_data, mapping = aes(x = Cell_number_requirement, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
scale_color_manual(values = c('check_all_groups' = '#eb4034', 'no_groups' = '#3483eb', 'only_looking_at_smallest_group' = '#db8e2a'))
saveplot('Summary_PercentIsoforms_along_CellNum', percent_iso_kept_cellNum, 12)
percent_iso_kept_cellNum <- ggplot(data = big_summarized_data, mapping = aes(x = Cell_number_requirement, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 2) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
scale_color_manual(values = c('check_all_groups' = '#eb4034', 'no_groups' = '#3483eb', 'only_looking_at_smallest_group' = '#db8e2a'))
percent_gene_kept_cellNum <- ggplot(data = big_summarized_data, mapping = aes(x = Cell_number_requirement, y = Percent_genes_kept,
color = filter_type)) +
geom_point(size = 2) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs,\nsummarized between all methods')) +
scale_color_manual(values = c('check_all_groups' = '#eb4034', 'no_groups' = '#3483eb', 'only_looking_at_smallest_group' = '#db8e2a'))
percent_iso_kept_cellNum
percent_iso_kept_cellNum <- ggplot(data = big_summarized_data, mapping = aes(x = Cell_number_requirement, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1.6) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
scale_color_manual(values = c('check_all_groups' = '#eb4034', 'no_groups' = '#3483eb', 'only_looking_at_smallest_group' = '#db8e2a'))
percent_iso_kept_cellNum
percent_iso_kept_cellNum <- ggplot(data = big_summarized_data, mapping = aes(x = Cell_number_requirement, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1.6) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
scale_color_manual(values = c('check_all_groups' = '#eb4034', 'no_groups' = '#3483eb', 'only_looking_at_smallest_group' = '#db8e2a'))
percent_gene_kept_cellNum <- ggplot(data = big_summarized_data, mapping = aes(x = Cell_number_requirement, y = Percent_genes_kept,
color = filter_type)) +
geom_point(size = 1.6) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs,\nsummarized between all methods')) +
scale_color_manual(values = c('check_all_groups' = '#eb4034', 'no_groups' = '#3483eb', 'only_looking_at_smallest_group' = '#db8e2a'))
saveplot('Summary_PercentIsoforms_along_CellNum', percent_iso_kept_cellNum, 12)
saveplot('Summary_PercentGenes_along_CellNum', percent_gene_kept_cellNum, 12)
# Make some summary plots
colorvalues <- c('check_all_groups' = '#eb4034', 'no_groups' = '#3483eb',
'only_looking_at_smallest_group' = '#db8e2a', 'at_least_one_group' = '#772adb')
colorvalues
library(tidyverse)
# Helper func
saveplot <- function(name_here, plot_here, width=8) {
ggsave(paste0('/oshlack_lab/michael.nakai/projects/testing_isopod/datasets/pacbio_pbmc/null_simulations/filter_counts_table_testing_groups/final_figs/', name_here, '.png'),
plot_here, device = 'png', width = width, height = 8, dpi = 600)
}
### MAIN
big_summarized_data <- as.data.frame(matrix(NA, nrow = 0, ncol = 0))
groups_to_check <- c('no_groups', 'only_looking_at_smallest_group', 'at_least_one_group', 'check_all_groups')
datasets_to_check <- c('pacbio', 'mixology1', 'mixology2')
# Load data in
for (analysis_name in groups_to_check) {
for (dataset_name in datasets_to_check) {
file_prefix_loc <- paste0('/oshlack_lab/michael.nakai/projects/testing_isopod/datasets/pacbio_pbmc/null_simulations/filter_counts_table_testing_groups/',
dataset_name, '/', analysis_name, '/summarized_data.rds')
temp <- readRDS(file_prefix_loc)
temp$filter_type <- analysis_name
temp$dataset_name <- dataset_name
big_summarized_data <- rbind(big_summarized_data, temp)
}
}
# Correct the Cell_number_requirement column (forgot to change in original scripts)
temp <- rep(NA, nrow(big_summarized_data))
for (i in 1:nrow(big_summarized_data)) {
if (big_summarized_data$dataset_name[i] == 'mixology1') {
temp[i] = as.integer(53 * big_summarized_data$Fraction_of_smallest_group[i])
} else if (big_summarized_data$dataset_name[i] == 'mixology2') {
temp[i] = as.integer(19 * big_summarized_data$Fraction_of_smallest_group[i])
} else {
temp[i] = big_summarized_data$Cell_number_requirement[i]
}
}
big_summarized_data$Cell_number_requirement <- temp
# Add other stats into the dataframe
big_summarized_data$Iso_to_gene_ratio <- big_summarized_data$Number_of_isoforms / big_summarized_data$Number_of_genes
big_summarized_data$filter_type <- factor(big_summarized_data$filter_type, levels = groups_to_check)
big_summarized_data$dataset_name <- factor(big_summarized_data$dataset_name, levels = datasets_to_check)
# Loop over different filter types and make plots
for (filter_type_name in groups_to_check) {
subdata <- big_summarized_data[which(big_summarized_data$filter_type == filter_type_name), ]
percent_iso_kept <- ggplot(data = subdata, mapping = aes(x = Cell_number_requirement, y = Percent_isoforms_kept, color = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
percent_iso_kept_as_frac <- ggplot(data = subdata, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept, color = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 100))+
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
percent_genes_kept <- ggplot(data = subdata, mapping = aes(x = Cell_number_requirement, y = Percent_genes_kept, color = dataset_name)) +
geom_point() +
geom_smooth(method='gam') +
coord_cartesian(ylim = c(0, 100))+
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
percent_genes_kept_as_frac <- ggplot(data = subdata, mapping = aes(x = Fraction_of_smallest_group, y = Percent_genes_kept, color = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 100))+
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
iso_gene_ratio <- ggplot(data = subdata, mapping = aes(x = Fraction_of_smallest_group, y = Iso_to_gene_ratio, color = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 50))+
ggtitle(paste0('The Isoform:Gene ratio between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
iso_gene_ratio_remaininggenes <- ggplot(data = subdata, mapping = aes(x = Number_of_genes, y = Iso_to_gene_ratio, color = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 50))+
ggtitle(paste0('The Isoform:Gene ratio between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
saveplot(paste0(filter_type_name, '_Isoforms_percent_kept'), percent_iso_kept, 8)
saveplot(paste0(filter_type_name, '_Isoforms_percent_kept_frac'), percent_iso_kept_as_frac, 8)
saveplot(paste0(filter_type_name, '_Genes_percent_kept'), percent_genes_kept, 8)
saveplot(paste0(filter_type_name, '_Genes_percent_kept_frac'), percent_genes_kept_as_frac, 8)
saveplot(paste0(filter_type_name, '_isogene_ratio'), iso_gene_ratio, 8)
saveplot(paste0(filter_type_name, '_isogene_ratio_percentgenes'), iso_gene_ratio_remaininggenes, 8)
}
# Make some summary plots
colorvalues <- c('check_all_groups' = '#eb4034', 'no_groups' = '#3483eb',
'only_looking_at_smallest_group' = '#db8e2a', 'at_least_one_group' = '#772adb')
percent_iso_kept_as_frac_summary <- ggplot(data = big_summarized_data, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE, size = 1.1) +
scale_color_manual(values = colorvalues)
percent_gene_kept_as_frac_summary <- ggplot(data = big_summarized_data, mapping = aes(x = Fraction_of_smallest_group, y = Percent_genes_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE, size = 1.1) +
scale_color_manual(values = colorvalues)
percent_iso_kept_cellNum <- ggplot(data = big_summarized_data, mapping = aes(x = Cell_number_requirement, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1.6) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
scale_color_manual(values = colorvalues)
percent_gene_kept_cellNum <- ggplot(data = big_summarized_data, mapping = aes(x = Cell_number_requirement, y = Percent_genes_kept,
color = filter_type)) +
geom_point(size = 1.6) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs,\nsummarized between all methods')) +
scale_color_manual(values = colorvalues)
saveplot('Summary_PercentIsoforms_along_Fraction', percent_iso_kept_as_frac_summary, 12)
saveplot('Summary_PercentGenes_along_Fraction', percent_gene_kept_as_frac_summary, 12)
saveplot('Summary_PercentIsoforms_along_CellNum', percent_iso_kept_cellNum, 12)
saveplot('Summary_PercentGenes_along_CellNum', percent_gene_kept_cellNum, 12)
library(tidyverse)
# Helper func
saveplot <- function(name_here, plot_here, width=8) {
ggsave(paste0('/oshlack_lab/michael.nakai/projects/testing_isopod/datasets/pacbio_pbmc/null_simulations/filter_counts_table_testing_groups/final_figs/', name_here, '.png'),
plot_here, device = 'png', width = width, height = 8, dpi = 600)
}
### MAIN
big_summarized_data <- as.data.frame(matrix(NA, nrow = 0, ncol = 0))
groups_to_check <- c('no_groups', 'only_looking_at_smallest_group', 'at_least_one_group', 'check_all_groups')
datasets_to_check <- c('pacbio', 'mixology1', 'mixology2')
# Load data in
for (analysis_name in groups_to_check) {
for (dataset_name in datasets_to_check) {
file_prefix_loc <- paste0('/oshlack_lab/michael.nakai/projects/testing_isopod/datasets/pacbio_pbmc/null_simulations/filter_counts_table_testing_groups/',
dataset_name, '/', analysis_name, '/summarized_data.rds')
temp <- readRDS(file_prefix_loc)
temp$filter_type <- analysis_name
temp$dataset_name <- dataset_name
big_summarized_data <- rbind(big_summarized_data, temp)
}
}
# Correct the Cell_number_requirement column (forgot to change in original scripts)
temp <- rep(NA, nrow(big_summarized_data))
for (i in 1:nrow(big_summarized_data)) {
if (big_summarized_data$dataset_name[i] == 'mixology1') {
temp[i] = as.integer(53 * big_summarized_data$Fraction_of_smallest_group[i])
} else if (big_summarized_data$dataset_name[i] == 'mixology2') {
temp[i] = as.integer(19 * big_summarized_data$Fraction_of_smallest_group[i])
} else {
temp[i] = big_summarized_data$Cell_number_requirement[i]
}
}
big_summarized_data$Cell_number_requirement <- temp
# Add other stats into the dataframe
big_summarized_data$Iso_to_gene_ratio <- big_summarized_data$Number_of_isoforms / big_summarized_data$Number_of_genes
big_summarized_data$filter_type <- factor(big_summarized_data$filter_type, levels = groups_to_check)
big_summarized_data$dataset_name <- factor(big_summarized_data$dataset_name, levels = datasets_to_check)
# Loop over different filter types and make plots
for (filter_type_name in groups_to_check) {
subdata <- big_summarized_data[which(big_summarized_data$filter_type == filter_type_name), ]
percent_iso_kept <- ggplot(data = subdata, mapping = aes(x = Cell_number_requirement, y = Percent_isoforms_kept, color = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
percent_iso_kept_as_frac <- ggplot(data = subdata, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept, color = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 100))+
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
percent_genes_kept <- ggplot(data = subdata, mapping = aes(x = Cell_number_requirement, y = Percent_genes_kept, color = dataset_name)) +
geom_point() +
geom_smooth(method='gam') +
coord_cartesian(ylim = c(0, 100))+
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
percent_genes_kept_as_frac <- ggplot(data = subdata, mapping = aes(x = Fraction_of_smallest_group, y = Percent_genes_kept, color = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 100))+
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
iso_gene_ratio <- ggplot(data = subdata, mapping = aes(x = Fraction_of_smallest_group, y = Iso_to_gene_ratio, color = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 50))+
ggtitle(paste0('The Isoform:Gene ratio between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
iso_gene_ratio_remaininggenes <- ggplot(data = subdata, mapping = aes(x = Number_of_genes, y = Iso_to_gene_ratio, color = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 50))+
ggtitle(paste0('The Isoform:Gene ratio between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
saveplot(paste0(filter_type_name, '_Isoforms_percent_kept'), percent_iso_kept, 8)
saveplot(paste0(filter_type_name, '_Isoforms_percent_kept_frac'), percent_iso_kept_as_frac, 8)
saveplot(paste0(filter_type_name, '_Genes_percent_kept'), percent_genes_kept, 8)
saveplot(paste0(filter_type_name, '_Genes_percent_kept_frac'), percent_genes_kept_as_frac, 8)
saveplot(paste0(filter_type_name, '_isogene_ratio'), iso_gene_ratio, 8)
saveplot(paste0(filter_type_name, '_isogene_ratio_percentgenes'), iso_gene_ratio_remaininggenes, 8)
}
# Make some summary plots
colorvalues <- c('check_all_groups' = '#eb4034', 'no_groups' = '#3483eb',
'only_looking_at_smallest_group' = '#db8e2a', 'at_least_one_group' = '#772adb')
big_summarized_data2 <- big_summarized_data[which(big_summarized_data$Fraction_of_smallest_group <= 1), ] # Limit summary plots to fractions <= 1
percent_iso_kept_as_frac_summary <- ggplot(data = big_summarized_data2, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE, size = 1.1) +
scale_color_manual(values = colorvalues)
percent_gene_kept_as_frac_summary <- ggplot(data = big_summarized_data2, mapping = aes(x = Fraction_of_smallest_group, y = Percent_genes_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE, size = 1.1) +
scale_color_manual(values = colorvalues)
percent_iso_kept_cellNum <- ggplot(data = big_summarized_data2, mapping = aes(x = Cell_number_requirement, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1.6) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
scale_color_manual(values = colorvalues)
percent_gene_kept_cellNum <- ggplot(data = big_summarized_data2, mapping = aes(x = Cell_number_requirement, y = Percent_genes_kept,
color = filter_type)) +
geom_point(size = 1.6) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs,\nsummarized between all methods')) +
scale_color_manual(values = colorvalues)
saveplot('Summary_PercentIsoforms_along_Fraction', percent_iso_kept_as_frac_summary, 12)
saveplot('Summary_PercentGenes_along_Fraction', percent_gene_kept_as_frac_summary, 12)
saveplot('Summary_PercentIsoforms_along_CellNum', percent_iso_kept_cellNum, 12)
saveplot('Summary_PercentGenes_along_CellNum', percent_gene_kept_cellNum, 12)
big_summarized_data
test <- big_summarized_data[which(big_summarized_data$filter_type == 'no_groups'), ]
test
library(tidyverse)
# Helper func
saveplot <- function(name_here, plot_here, width=8) {
ggsave(paste0('/oshlack_lab/michael.nakai/projects/testing_isopod/datasets/pacbio_pbmc/null_simulations/filter_counts_table_testing_groups/final_figs/', name_here, '.png'),
plot_here, device = 'png', width = width, height = 8, dpi = 600)
}
### MAIN
big_summarized_data <- as.data.frame(matrix(NA, nrow = 0, ncol = 0))
groups_to_check <- c('no_groups', 'only_looking_at_smallest_group', 'at_least_one_group', 'check_all_groups')
datasets_to_check <- c('pacbio', 'mixology1', 'mixology2')
# Load data in
for (analysis_name in groups_to_check) {
for (dataset_name in datasets_to_check) {
file_prefix_loc <- paste0('/oshlack_lab/michael.nakai/projects/testing_isopod/datasets/pacbio_pbmc/null_simulations/filter_counts_table_testing_groups/',
dataset_name, '/', analysis_name, '/summarized_data.rds')
temp <- readRDS(file_prefix_loc)
temp$filter_type <- analysis_name
temp$dataset_name <- dataset_name
big_summarized_data <- rbind(big_summarized_data, temp)
}
}
# Correct the Cell_number_requirement column (forgot to change in original scripts)
temp <- rep(NA, nrow(big_summarized_data))
for (i in 1:nrow(big_summarized_data)) {
if (big_summarized_data$dataset_name[i] == 'mixology1') {
temp[i] = as.integer(53 * big_summarized_data$Fraction_of_smallest_group[i])
} else if (big_summarized_data$dataset_name[i] == 'mixology2') {
temp[i] = as.integer(19 * big_summarized_data$Fraction_of_smallest_group[i])
} else {
temp[i] = big_summarized_data$Cell_number_requirement[i]
}
}
big_summarized_data$Cell_number_requirement <- temp
# Add other stats into the dataframe
big_summarized_data$Iso_to_gene_ratio <- big_summarized_data$Number_of_isoforms / big_summarized_data$Number_of_genes
big_summarized_data$filter_type <- factor(big_summarized_data$filter_type, levels = groups_to_check)
big_summarized_data$dataset_name <- factor(big_summarized_data$dataset_name, levels = datasets_to_check)
# Loop over different filter types and make plots
for (filter_type_name in groups_to_check) {
subdata <- big_summarized_data[which(big_summarized_data$filter_type == filter_type_name), ]
percent_iso_kept <- ggplot(data = subdata, mapping = aes(x = Cell_number_requirement, y = Percent_isoforms_kept, color = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
percent_iso_kept_as_frac <- ggplot(data = subdata, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept, color = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 100))+
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
percent_genes_kept <- ggplot(data = subdata, mapping = aes(x = Cell_number_requirement, y = Percent_genes_kept, color = dataset_name)) +
geom_point() +
geom_smooth(method='gam') +
coord_cartesian(ylim = c(0, 100))+
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
percent_genes_kept_as_frac <- ggplot(data = subdata, mapping = aes(x = Fraction_of_smallest_group, y = Percent_genes_kept, color = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 100))+
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
iso_gene_ratio <- ggplot(data = subdata, mapping = aes(x = Fraction_of_smallest_group, y = Iso_to_gene_ratio, color = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 50))+
ggtitle(paste0('The Isoform:Gene ratio between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
iso_gene_ratio_remaininggenes <- ggplot(data = subdata, mapping = aes(x = Number_of_genes, y = Iso_to_gene_ratio, color = dataset_name)) +
geom_point() +
coord_cartesian(ylim = c(0, 50))+
ggtitle(paste0('The Isoform:Gene ratio between differing fraction cutoffs for\nthe method: ', filter_type_name)) +
geom_smooth(method = 'gam', se = FALSE)
saveplot(paste0(filter_type_name, '_Isoforms_percent_kept'), percent_iso_kept, 8)
saveplot(paste0(filter_type_name, '_Isoforms_percent_kept_frac'), percent_iso_kept_as_frac, 8)
saveplot(paste0(filter_type_name, '_Genes_percent_kept'), percent_genes_kept, 8)
saveplot(paste0(filter_type_name, '_Genes_percent_kept_frac'), percent_genes_kept_as_frac, 8)
saveplot(paste0(filter_type_name, '_isogene_ratio'), iso_gene_ratio, 8)
saveplot(paste0(filter_type_name, '_isogene_ratio_percentgenes'), iso_gene_ratio_remaininggenes, 8)
}
# Make some summary plots
colorvalues <- c('check_all_groups' = '#eb4034', 'no_groups' = '#3483eb',
'only_looking_at_smallest_group' = '#db8e2a', 'at_least_one_group' = '#772adb')
big_summarized_data2 <- big_summarized_data[which(big_summarized_data$Fraction_of_smallest_group <= 1), ] # Limit summary plots to fractions <= 1
percent_iso_kept_as_frac_summary <- ggplot(data = big_summarized_data2, mapping = aes(x = Fraction_of_smallest_group, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE, size = 1.1) +
scale_color_manual(values = colorvalues)
percent_gene_kept_as_frac_summary <- ggplot(data = big_summarized_data2, mapping = aes(x = Fraction_of_smallest_group, y = Percent_genes_kept,
color = filter_type)) +
geom_point(size = 1) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs,\nsummarized between all methods')) +
geom_smooth(method = 'gam', se = FALSE, size = 1.1) +
scale_color_manual(values = colorvalues)
percent_iso_kept_cellNum <- ggplot(data = big_summarized_data2, mapping = aes(x = Cell_number_requirement, y = Percent_isoforms_kept,
color = filter_type)) +
geom_point(size = 1.6) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of isoforms kept between differing fraction cutoffs,\nsummarized between all methods')) +
scale_color_manual(values = colorvalues)
percent_gene_kept_cellNum <- ggplot(data = big_summarized_data2, mapping = aes(x = Cell_number_requirement, y = Percent_genes_kept,
color = filter_type)) +
geom_point(size = 1.6) +
coord_cartesian(ylim = c(0, 100)) +
ggtitle(paste0('The percentage of genes kept between differing fraction cutoffs,\nsummarized between all methods')) +
scale_color_manual(values = colorvalues)
saveplot('Summary_PercentIsoforms_along_Fraction', percent_iso_kept_as_frac_summary, 12)
saveplot('Summary_PercentGenes_along_Fraction', percent_gene_kept_as_frac_summary, 12)
saveplot('Summary_PercentIsoforms_along_CellNum', percent_iso_kept_cellNum, 12)
saveplot('Summary_PercentGenes_along_CellNum', percent_gene_kept_cellNum, 12)
